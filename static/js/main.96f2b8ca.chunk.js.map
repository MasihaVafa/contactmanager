{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","then","_this2","className","onClick","style","cursor","name","float","color","bind","Link","to","marginRight","email","phone","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","About","NotFound","Test","title","body","fetch","response","json","_this$state","TextInputGroup","_ref","lable","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","label","EditContact","updContact","match","params","put","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96f2b8ca.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case 'UPDATE_CONTACT':\r\n        return{\r\n          ...state,\r\n          contacts :state.contacts.map(\r\n            contact => contact.id === action.payload.id ?\r\n            (contact = action.payload) : contact\r\n          ) \r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n  \r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    // .then(res => this.setState({ contacts: res.data }));\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  onDeleteClick = (id, dispatch) => {\r\n    // try {\r\n    //   await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    //   // .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n    //   dispatch({ type: \"DELET_CONTACT\", payload: id });\r\n    // } catch (e) {\r\n    //   dispatch({ type: \"DELET_CONTACT\", payload: id });\r\n    // } NOT Work for me!!!!!!\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then(res => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n\r\n  render() {\r\n    const { contact } = this.props;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n\r\n                {contact.name}\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, contact.id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${contact.id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                      float: \"right\",\r\n                      cursor: \"pointer\"\r\n                    }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{contact.email}</li>\r\n                  <li className=\"list-group-item\">{contact.phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\" />\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry , that page does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  //props\r\n  lable,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{lable}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n  // error:PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    //name : name , email : email , phone : phone\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    // .then(res => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    //redirect to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n  //For inputs : name , email , phone\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const { name, email, phone } = res.data;\r\n\r\n    this.setState({\r\n      name: name,\r\n      email: email,\r\n      phone: phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    //Check For Errors\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    const updContact = { name, email, phone };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,updContact\r\n    );\r\n    dispatch({type : 'UPDATE_CONTACT' , payload : res.data});\r\n\r\n    //Clear State\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n    //redirect to home page\r\n    this.props.history.push(\"/\");\r\n  };\r\n  //For inputs : name , email , phone\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n              {/* <AddContact />\n            <Contacts /> */}\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}